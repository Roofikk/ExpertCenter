@using ExpertCenter.MvcApp.Models.PriceList
@model PriceListDetailsModel

@{
    ViewData["Title"] = Model.PriceListName;
}

<input type="hidden" id="priceListId" value="@Model.PriceListId" />
<h1>Прайс лист: @Model.PriceListName</h1>
<div class="row justify-content-between">
    <div class="col-auto">
        <a asp-controller="Products"
           asp-action="Create"
           asp-route-priceListId="@Model.PriceListId"
           class="col-auto btn btn-success">Создать новый товар</a>
        <a asp-action="Index" class="btn btn-secondary">Вернуться к списку</a>
    </div>
    <div class="col-5">
        <div class="dropdown float-end">
            <button id="dropdownMenuSortBy"
                    class="btn btn-primary dropdown-toggle"
                    type="button"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                Сортировка
            </button>
            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuSortBy">
                <div class="container">
                    @foreach (var sortBy in Model.SortByModel)
                    {
                        <div class="row justify-content-between align-items-center mb-2" style="min-width: 240px">
                            <div class="col-8 flex-grow-1">
                                @sortBy.ColumnName
                            </div>
                            <div class="col-4">
                                <a asp-action="Details"
                                   asp-route-id="@Model.PriceListId"
                                   asp-route-sortBy="@sortBy.ColumnId"
                                   class="btn btn-sm btn-secondary"
                                   onclick="show(@Model.PriceListId, 1, '@sortBy.ColumnId', false); return false;"><span>&#8595;</span></a>
                                <a asp-action="Details"
                                   asp-route-id="@Model.PriceListId"
                                   asp-route-sortBy="@sortBy.ColumnId"
                                   asp-route-isDesc="true"
                                   class="btn btn-sm btn-secondary"
                                   onclick="show(@Model.PriceListId, 1, '@sortBy.ColumnId', true); return false;"><span>&#8593;</span></a>
                            </div>
                        </div>
                    }
                    <hr class="dropdown-divider" />
                    <a asp-action="Details"
                       asp-route-priceListId="@Model.PriceListId"
                       class="dropdown-item"
                       onclick="show(@Model.PriceListId, 1, 'default', false); return false;">По умолчанию</a>
                </div>
            </div>
        </div>
    </div>
</div>
<hr />
<div id="mainContent">
    <table class="table table-striped">
        <thead id="tableHead">
            <tr>
                <th class="product-name">Наименование</th>
                <th class="product-article">Артикул</th>
                @foreach (var column in Model.ProdColumns)
                {
                    <th class="product-column-@column.Key.ColumnId">
                        <input name="ProductColumnId" type="hidden" value="@column.Key.ColumnId" />
                        @column.Key.ColumnName
                    </th>
                }
                <th>Действия</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            @foreach (var item in Model.Products)
            {
                <tr>
                    <input name="ProductId" type="hidden" value="@item.ProductId" />
                    <td>@item.ProductName</td>
                    <td>@item.Article</td>
                    @foreach (var column in Model.ProdColumns)
                    {
                        <td>@column.Value[item.ProductId]</td>
                    }
                    <td>
                        <button type="button" class="btn btn-sm btn-danger" onclick="showModalDeleteProduct(@item.ProductId)">Удалить</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div id="pagination">
        @await Html.PartialAsync("_PaginationBar", Model.PaginationBarModel)
    </div>
</div>

@await Html.PartialAsync("Product/_Delete")

@section Scripts
{
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/product.js"></script>

    <script>
        $(document).ready(function () {
            var queryValues = splitQuery();
            overridePaginationLinks(
                @Model.PriceListId,
                Number(queryValues?.pageIndex ?? 1),
                queryValues?.sortBy ?? "default",
                queryValues?.isDesc ?? false);
        });

        function splitQuery() {
            return window.location.search.substring(1).split('&').reduce(function (map, obj) {
                var parts = obj.split('=');

                if (parts.length != 2) {
                    return map;
                }

                parts[0][0] = parts[0][0].toLowerCase();
                map[parts[0]] = parts[1];
                return map;
            }, {});
        }

        function show(id, pageIndex, sortBy, isDesc) {
            window.history.replaceState(null, "", "@Url.Action("Details", "PriceLists")/" + "?pageIndex=" + pageIndex + "&sortBy=" + sortBy + "&isDesc=" + isDesc);

            $.ajax({
                url: '@Url.Action("Details", "PriceLists")/' + '?pageIndex=' + pageIndex + '&sortBy=' + sortBy + '&isDesc=' + isDesc,
                type: 'GET',
                data: id,
                success: function (response) {
                    var html = $(response).find('#mainContent').html();
                    $('#mainContent').html(html);
                    overridePaginationLinks(id, Number(pageIndex), sortBy, isDesc);
                },
                error: function (xhr, status, error) {

                }
            })
        }

        function overridePaginationLinks(id, pageIndex, sortBy, isDesc) {
            $('#paginationBar').find(function () {
                var previousPage = $(this).find('a[id="previousPage"]');
                previousPage.on('click', function () {
                    show(id, pageIndex - 1, sortBy, isDesc);
                    return false;
                })

                var nextPage = $(this).find('a[id="nextPage"]');
                nextPage.on('click', function () {
                    show(id, pageIndex + 1, sortBy, isDesc);
                    return false;
                })

                $('a[id^="page"]').each(function () {
                    var currentPageIndex = $(this).attr('id').split('-')[1];
                    $(this).on('click', function () {
                        show(id, currentPageIndex, sortBy, isDesc);
                        return false;
                    })
                })
            });
        }

        function showModalDeleteProduct(id) {
            var deleteModal = $('#deleteModal');
            deleteModal.modal('show');
            deleteModal.find('input[name="ProductId"]').val(id);

            deleteModal.find('form').on('submit', function (e) {
                e.preventDefault();

                $.ajax({
                    url: '@Url.Action("Delete", "Products")/' + id,
                    type: 'GET',
                    success: function (response) {
                        $('body').append(response);
                    },
                    error: function (xhr, status, error) {
                        window.alert("Не удалось удалить продукт. Обновите страницу");
                        console.log(xhr, status, error);
                    }
                });

                deleteModal.modal('hide');
            });

            deleteModal.on('hidden.bs.modal', function () {
                $(this).find('form').off('submit');
            });
        }
    </script>
}
